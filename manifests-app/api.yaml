apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-app-api
  labels: &AppLabels
    app.kubernetes.io/name: k8s-app
    app.kubernetes.io/component: api
spec:
  selector:
    matchLabels: *AppLabels
  replicas: 1
  template:
    metadata:
      labels: *AppLabels
    spec:
      containers:
      - name: api
        image: gcr.io/gkeoplabs-1stparty-mp-3/k8s-app/api
        imagePullPolicy: Always
        env:
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.host
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.port
        - name: RABBITMQ_USERNAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.password
        - name: RABBITMQ_TOPIC_NAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.topic.name
        - name: RABBITMQ_REPLIES_QUEUE_NAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.reports.replies.queue.name
        ports:
        - name: rest-api
          containerPort: 8080
        resources:
          limits:
            cpu: "700m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-app-api
  labels: &AppLabels
    app.kubernetes.io/name: k8s-app
    app.kubernetes.io/component: api
spec:
  type: LoadBalancer
  loadBalancerIP: 10.0.10.251
  ports:
    - name: rest-api
      port: 80
      targetPort: 8080
  selector: *AppLabels
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/app-root: /
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
  labels:
    app.kubernetes.io/name: k8s-app
    app.kubernetes.io/component: api-ingress
  name: k8s-app-api-ingress
spec:
  rules:
  - host: 147.75.201.84.xip.io
    http:
      paths:
      - backend:
          serviceName: k8s-app-api
          servicePort: 80
        path: /
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: k8s-app-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k8s-app-api
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
