apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-app-billing-backend
  labels: &AppLabels
    app.kubernetes.io/name: k8s-app
    app.kubernetes.io/component: billing-backend
spec:
  selector:
    matchLabels: *AppLabels
  replicas: 1
  template:
    metadata:
      labels: *AppLabels
    spec:
      containers:
      - name: billing-backend
        image: gcr.io/gkeoplabs-1stparty-mp-3/k8s-app/billing-backend
        imagePullPolicy: Always
        env:
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.host
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.port
        - name: RABBITMQ_USERNAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.password
        - name: RABBITMQ_TOPIC_NAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.topic.name
        - name: RABBITMQ_REQUESTS_QUEUE_NAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.reports.requests.queue.name
        - name: RABBITMQ_REPLIES_QUEUE_NAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: rabbitmq.reports.replies.queue.name
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: postgresql.host
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: postgresql.host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: postgresql.port
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: postgresql.database
        - name: POSTGRES_USERNAME
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: postgresql.username
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: k8s-app-config
              key: postgresql.password
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: k8s-app-billing-backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k8s-app-billing-backend
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
